import { NextResponse } from "next/server";
import { createClient } from "@/utils/supabase/server";

export async function POST(request: Request) {
  const { email, password } = await request.json();
  const supabase = createClient();
  const origin = request.nextUrl.origin;

  // Sign in the user with Supabase Auth
  const { error } = await supabase.auth.signInWithPassword({ email, password });
  if (error) {
    return NextResponse.json({ error: error.message }, { status: 400 });
  }

  // Fetch the user's profile (ensure your "users" table is in sync)
  const { data: userProfile, error: profileError } = await supabase
    .from("users")
    .select("unique_id")
    .eq("email", email)
    .single();

  if (profileError || !userProfile?.unique_id) {
    return NextResponse.json(
      { error: "User profile not found." },
      { status: 400 }
    );
  }

  // Create a response and set the cookie
  const response = NextResponse.json({ redirectUrl: "/onboarding" });
  response.cookies.set("usernameID", userProfile.unique_id, {
    path: "/",
    maxAge: 60 * 60 * 24 * 7, // 7 days
    // If you need to read it on the client, omit httpOnly
    // httpOnly: true, // Uncomment for security if not needed on the client
  });

  return response;
}
